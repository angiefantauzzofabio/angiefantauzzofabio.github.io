$white: #E5E5E5; 
$yellow: #F8C02D; 
$light-red: #FF614C;
$red: #FF2E00;
$grey: #333333; 
$black: #1D1A1B; 
$mainFont: 'DM Sans', sans-serif, arial;


body{
   background-color: $black;
   transition: background-color 1s ease;
 }


.lines{
    opacity: 100%;
    color: $yellow;
    position: relative;
    width: 90%;
    margin: auto;
    margin-bottom: 5vh;
    margin-top: 5vh;
    border: 3px solid $yellow;
    height: 0.5rem;
    background-color: $yellow;
}


.container-us{

    &-title{
        color: $yellow;
        text-align: center;
        margin: 0 auto;
        padding: 5% 5%;
        font-style: $mainFont;
    }

    &-sections{
        text-align: center;
    }
    &-sections-info{
        padding: 2% 2%;
    }
    &-sections-info-text{
        color: $yellow;
        padding: 5% 5%;
        font-style: $mainFont;
    }
    &-sections-buttons{
        padding: 1% 5%;
        display: flex;
        justify-content: center;
        gap: 15vw;
    }
    .btn{
        border-radius: 0%;
        width: fit-content;
        height: fit-content;
    }

}

.ingreso{

    &-section{
       margin-top: 10vh;
       margin-bottom: 10vh;
       background-image: linear-gradient(to right, $yellow , transparent);
       display: flex;
       justify-content: center;

       &-img{
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        position:relative;
        z-index: -1;
        width: 100%;
        height: auto;
        justify-items: center;
    }
 
       .btn{
          background-color: $black;
          color: $yellow;
          height: min-content;
          border-radius: 0%;
          width: fit-content;
          position:absolute;
          margin-top: 6em;
       }

       h1{
          color: $grey;
          text-align: center;
          position:absolute;
          font-weight: bold;
          left: 0;
          font-size: 2em;
          margin-top: 3em;
          margin-left: 1em;
       }
       @media only screen and (max-width: 800px) {
 
          h1 { 
            display: none;
            max-width: 100%;
          }
          .btn{
            font-size: 0.5rem;
            max-width: 100%;
          }
       }
    }
 }

 .container-news{

    .carousel{
        width: 80%;
        margin: 0 auto;
    }
    &-title{
        color: $yellow;
        text-align: center;
        margin: 0 auto;
        padding: 3% 3%;
        font-style: $mainFont;
    }

    &-cards{
        display: flex;
        flex-direction: row;
        justify-content: center;
        gap:1rem;

        .card{
            margin-top: 10vh;
            background-color: $black;
            border-color: $black;
           
         }
         .card-text{
            color: $white;
            font-style: $mainFont;
            font-size: 1rem;
         }
         .btn-card{
            color: $yellow;
            text-decoration: none;
         }

    }

    @media (max-width: 800px) {
        .flex-container {
            flex-direction: column;
            max-width: 100%;
        }
        .card-text{
            display: none;
        }
        .card-title{
            font-size: 0.8rem;
        }
        .btn-card{
            display: inline;
        }
    }

 }

 .container-sections{
    text-align: center;

    &-title{
        color: $yellow;
        text-align: center;
        margin: 0 auto;
        padding: 5% 5%;
        font-style: $mainFont;
    }

    &-subtitle{
        padding: 1% 3%;
        text-align: center;
        color: $yellow;
    }

    @media (max-width: 800px) {
        .container-sections-subtitle {
            font-size: 0.8rem;
        }
    }
    &-cards{
        display: flex;
        flex-direction: row;
        justify-content: center;
        padding: 5% 5%;
        gap: 5vw;

        .card1{
            border-color: $black;
            border-radius: none;
            background-image: linear-gradient(to right, $yellow ,#F8D57A,  transparent);
            width: 30rem;
            display: flex;
         
        }
        .card2{
            border-color: $black;
            border-radius: none;
            background-image: linear-gradient(to right, $red ,$light-red, transparent);
            width: 30rem;
            display: flex;
           

        }
        .card-img-top{
            z-index: -1;
        }
        .card-img-top-text{
            color: $grey;
            position: absolute;
            margin: 0 auto;
            text-align: center;
            font-weight: bold;
            margin-top: 4vh;
            margin-left: 2vw;
        }
        @media (max-width: 800px) {
            .card-img-top-text {
                font-size: 0.8rem;
                margin-top: 1vh;
            }
        }

    }

    &-img{
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        position:relative;
        z-index: -1;
        width: 100%;
        height: auto;
        justify-items: center;
        margin-bottom: 10vh;
        margin-top: 5vh;

    }

    .grid-container {
        display: grid;
        column-gap: 5vw;
        row-gap: 5vh;
        grid-template-columns: repeat(2, 1fr);
        padding: 10vh;

        .grid-item {
            text-align: center;

            &-img{
                width: 100%;
                height: auto;
            }

            &-text{
                color: $yellow;
                font-weight: bold;
                margin-top: 20vh;
                font-style: $mainFont;
            }
        }

        @media (max-width: 800px) {
            .grid-item-text{
                margin-top: 1vh;
                font-size: 0.7rem;
                max-width: 100%;
            }

        }

      }


    .btn{
        background-color: $yellow;
        border: none;
        color: $black;
        .btn:hover{
            background-color: $yellow;
            color: $yellow;
        }
    }
      
 }

 .container-ending{
    padding: 5% 15%;

    &-title{
        color: $yellow;
        text-align: center;
        margin: 0 auto;
        padding: 5% 5%;
        font-style: $mainFont;
    }

    &-img{
        margin: 0 auto;
        max-width: 100%;
        height: auto;
    }



 }

 .footer-img{
    margin: 0 auto;
    max-width: 100%;
    height: auto;
 }


.container-footer{
    max-width: 100%;
    background-color: $yellow;
    padding: 5% 10%;

    .grid-container {
        display: grid;
        grid-template-columns: auto auto;
        gap: 2rem;
      }

    &-logo{
        max-width: 100%;
        height: auto;
        display: flex;
    }
    &-descrp{
        margin-top: 5vh;
        width: 35vw;
    }
    &-descrp-text{
        font-size: 1rem;
        font-style: $mainFont;
    }
    &-info{
        margin-left: 50vw;
    }
    &-info-text{
        font-size: 1rem;
        margin-top: 5vh;
        font-style: $mainFont;
        width: fit-content;
    }

    &-title{
        color: $black;
        text-align: center;
        margin: 0 auto;
        padding: 5% 5%;
        font-style: $mainFont;
    }
    &-social{
        width: fit-content;
        margin: 0 auto;

        &-social-logo{
            max-width: 100%;
            height: auto;
        }
    }

}


// MIXIN //
@mixin title {
    font-family: $mainFont;
    font-size: 2rem;
}

@mixin subtitle {
    font-family: $mainFont;
    font-size: 1.5rem;
}

@mixin text {
    font-family: $mainFont;
    font-size: 1rem;
}

@mixin hrAmarillo {
    height: 0.5rem;
    background-color: #F8C02D;
    margin: 3rem;
}

// Hasta que empecemos a modularizar, o sea mandar los mixin, las variables y otras cosas a otras hojas de estilos, lo dejo aca arriba



* {
    margin: 0px;
    border: 0px;
}

.body {
    background-color: $black;
    font-family: $mainFont;
}
.navbar {
    background-color: $black;
    font-family: $mainFont;

}
.logo{
    position: relative;
    float: left;
    width: 100px;
    height: 50px;
}

// Estas variables son de bootstrap, lo que hago para saber como modificarlas es probar que hace cada una desde el inspeccionar elementos
// del navegador, meter mano hasta encontrar como lo quiero dejar y pongo las propiedades que le modifque aca
.navbar-toggler {
    color: rgba(255, 255, 255, 0.75);
}

.dropdown-menu {
    --bs-dropdown-bg: $black;
    --bs-dropdown-color: $yellow;
    }

    .dropdown-item {
        display: block;
        width: 100%;
        padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
        clear: both;
        font-weight: 400;
        color: $yellow;
        text-align: inherit;
        text-decoration: none;
        white-space: nowrap;
        background-color: transparent;
        border: 0;
        }

.navbar-dark {
    --bs-navbar-color: #F8C02D;
    --bs-navbar-hover-color: rgba(255, 255, 255, 0.75);
    --bs-navbar-disabled-color: rgba(255, 255, 255, 0.25);
    --bs-navbar-active-color: #fff;
    --bs-navbar-brand-color: #fff;
    --bs-navbar-brand-hover-color: #fff;
    --bs-navbar-toggler-border-color: rgba(255, 255, 255, 0.1);
    --bs-navbar-toggler-icon-bg: url(data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e);
}

.hero{
    height: 150vh;
    width: 100%;
    background-image: url(../assets/portada2.jpg);
    background-size: cover;
    background-position: 50%;
    // le agrega el filtro de blanco y negro

}


.counter {
    // Por alguna razon que voy a tratar de averiguar, cuando le pongo un filtro a la imagen me la pasa arriba de este div
    // Asi que se arregla con un relative
    position: relative;
    // Este margen negativo, hace que el div del contador 'quede montado' sobre el fondo del hero, o sea que el 20% del contador esta sobre el hero
    margin-top: -20%;
    // El fondo hace que la parte superior del contador se funda sobre el final del fondo del hero (el valor de rgba es $black pasado a rgb y el ultimo valor, es la opacidad que va de 0 que es transparente a 1 que es solido, o sea que 0.5 seria un 50% de opacidad
    background: linear-gradient(rgba(29, 26, 27,0),rgba(29, 26, 27,1) 10%);    
   
    &__title {
        display: flex;
        justify-content: center;
        color: $yellow;
    }
    
    &__wrapper {
        display: grid;
        // el gap es la distancia que se forma entre cada uno de los elementos del grid, o sea la distancia que hay entre, por ejemplo, el contador de incendios y rescates
        grid-gap: 2rem;
        // este valor asigna la cantidad de columnas, en este caso son dos, o sea incendio y rescate quedan en la misma linea, el repeat hace que se siga manteniendo esa misma estructura para abajo
        // Si cambias el 2 por otro numero, por ejemplo 4 los cuatro elementos quedan sobre una sola linea porque ahora va a haber 4 columnas
        // fr es la proporcion del tamano de cada elemento, o sea que tanto espacio horizontal va a ocupar, en este caso no va a generar variaciones
        grid-template-columns: repeat(4, 1fr);
        padding: 5% 10%;
    }

    @media (max-width: 800px) {
        .counter__wrapper{
            grid-template-columns: repeat(2, 1fr);
        }
        .wrapper__item{
            min-width: 30vw;
        }
    }
}

.wrapper {
   
    &__item {
        // Esto ya es dentro de cada elemento, o sea lo que va adentro de lo que tiene border
        // Esta con flex column para que se ordene, el icono, el numero y el texto uno abajo del otro
        display: flex;
        flex-direction: column;
        // el evenly hace que las cosas se separen entre si proporcionalmente con el margen, o sea que cada elemento va a tener la misma distancia entre si que con el margen
        // es similar al space arround pero a veces queda mejor, es cuestion de probar
        justify-content: space-evenly;
        // alinea los elementos hacia el centro del rectangulo creado con el border
        align-items: center;
        // hace que todos los elementos ocupen minimamente ese espacio, es para evitar que si queda chico ocupe menos que los demas
        // acordate que vw es como decir el 30% del ancho total de la pantalla (es como el vh que es view height, lo mismo pero a lo largo)
        min-width: 10vw;
        // genera el borde, solido, de color amarillo
        border: 0.3rem solid $yellow;
        // le da el mismo espacio vacio a todos los elementos
        padding: 1rem;
        margin: 1rem 0px;

        &--icon{
            color: $yellow;
        }

        &--number{
            color: $yellow;
        }

        &--text{
            color: $yellow;
            // centra el texto a lo word, aunque este afectado por el align center del flex, el texto siempre queda por defecto alineado
            // sobre la izquierda, igual que en word
            text-align: center;
        }
    }
}

/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  }
  
  /* Modal Content/Box */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
  }
  
  /* The Close Button */
  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  
  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  

  input[type=text], select {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
  }
  
  input[type=submit] {
    width: 100%;
    margin: 0 auto;
    background-color: $yellow;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  input[type=submit]:hover {
    background-color: $yellow;
  }



